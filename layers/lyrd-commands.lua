local commands = require("LYRD.layers.commands")
local mappings = require("LYRD.layers.mappings")

local L = {
	name = "LYRD Commands",
	cmd = {
		LYRDBreakLine = { default = ":s/[,(]/&\r/ge|:noh|:'[,']normal==", desc = "Break current line" },
		LYRDBufferClose = { default = ":bd", desc = "Close buffer" },
		LYRDBufferCloseAll = { default = ":bufdo bd", desc = "Close all buffers" },
		LYRDBufferCopy = { default = ':normal! ggVG"+y``', desc = "Copy whole buffer to clipboard" },
		LYRDBufferForceClose = { default = ":bd!", desc = "Force close buffer" },
		LYRDBufferForceCloseAll = { default = ":bufdo bd!", desc = "Force close all buffers" },
		LYRDBufferFormat = { desc = "Format document" },
		LYRDBufferJumpToLast = { default = ":b#", desc = "Jump to last buffer" },
		LYRDBufferNew = { default = ":enew", desc = "New empty buffer" },
		LYRDBufferNext = { default = ":bn", desc = "Next buffer" },
		LYRDBufferPaste = { default = ':normal! ggdG"+P', desc = "Paste clipboard to whole buffer" },
		LYRDBufferPrev = { default = ":bp", desc = "Previous Buffer" },
		LYRDBufferSave = { default = ":w", desc = "Save current file" },
		LYRDBufferSaveAll = { default = ":wall", desc = "Save all files" },
		LYRDBufferSetReadOnly = { default = ":setl readonly!", desc = "Toggle read only mode" },
		LYRDBufferSplitH = { default = ":split", desc = "Horizonal split" },
		LYRDBufferSplitV = { default = ":vsplit", desc = "Vertical split" },
		LYRDBufferToggleWrap = { default = ":setlocal wrap!", desc = "Toggle line wrap" },
		LYRDCodeAlternateFile = { desc = "Toggle alternate file" },
		LYRDCodeBuild = { desc = "Build" },
		LYRDCodeFillStructure = { desc = "Fill structure" },
		LYRDCodeFixImports = { desc = "Fix imports" },
		LYRDCodeGenerate = { desc = "Run Generator Tool" },
		LYRDCodeGlobalCheck = { desc = "Global check" },
		LYRDCodeImplementInterface = { desc = "Implement interface" },
		LYRDCodeInsertSnippet = { desc = "Insert snippet" },
		LYRDCodeProduceGetter = { desc = "Generate getters code" },
		LYRDCodeProduceMapping = { desc = "Generate mappings code" },
		LYRDCodeProduceSetter = { desc = "Generate setters code" },
		LYRDCodeRefactor = { desc = "Refactor" },
		LYRDCodeRun = { desc = "Run" },
		LYRDDebugBreakpoint = { desc = "Toggle breakpoint" },
		LYRDDebugContinue = { desc = "Start / Continue" },
		LYRDDebugStepInto = { desc = "Step into" },
		LYRDDebugStepOver = { desc = "Step over" },
		LYRDDebugStop = { desc = "Stop" },
		LYRDDebugToggleRepl = { desc = "Toggle Debug Repl" },
		LYRDDebugToggleUI = { desc = "Toggle Debug UI" },
		LYRDGitBranches = { desc = "Branches" },
		LYRDGitBrowseOnWeb = { desc = "Browse line on web" },
		LYRDGitCheckoutDev = { desc = "Checkout Develop branch" },
		LYRDGitCheckoutMain = { desc = "Checkout Main branch" },
		LYRDGitCommit = { desc = "Commit changes" },
		LYRDGitCommits = { desc = "View Commits" },
		LYRDGitBufferCommits = { desc = "View Buffer Commits" },
		LYRDGitFlowFeatureFinish = { desc = "Feature finish" },
		LYRDGitFlowFeatureStart = { desc = "Feature start" },
		LYRDGitFlowHotfixFinish = { desc = "Hotfix finish" },
		LYRDGitFlowHotfixStart = { desc = "Hotfix start" },
		LYRDGitFlowInit = { desc = "Init" },
		LYRDGitFlowReleaseFinish = { desc = "Release finish" },
		LYRDGitFlowReleaseStart = { desc = "Release start" },
		LYRDGitModifiedFiles = { desc = "Modified files" },
		LYRDGitPull = { desc = "Pull" },
		LYRDGitPush = { desc = "Push" },
		LYRDGitRemove = { desc = "Remove" },
		LYRDGitStageAll = { desc = "Stage all" },
		LYRDGitStageCurrentFile = { desc = "Stage current file" },
		LYRDGitStash = { desc = "Stack current changes" },
		LYRDGitStatus = { desc = "Status" },
		LYRDGitUnstageCurrentFile = { desc = "Unstage current file" },
		LYRDGitViewBlame = { desc = "View blame" },
		LYRDGitViewCurrentFileLog = { desc = "Current file log" },
		LYRDGitViewDiff = { desc = "View diff" },
		LYRDGitViewLog = { desc = "File log" },
		LYRDGitWrite = { desc = "Write" },
		LYRDImplementedCommands = { default = commands.list_implemented, desc = "List implemented commands" },
		LYRDLSPFindCodeActions = { desc = "Actions" },
		LYRDLSPFindDeclaration = { desc = "" },
		LYRDLSPFindDefinitions = { desc = "" },
		LYRDLSPFindDocumentDiagnostics = { desc = "" },
		LYRDLSPFindDocumentSymbols = { desc = "" },
		LYRDLSPFindImplementations = { desc = "" },
		LYRDLSPFindLineDiagnostics = { desc = "" },
		LYRDLSPFindRangeCodeActions = { desc = "Range Actions" },
		LYRDLSPFindReferences = { desc = "" },
		LYRDLSPFindTypeDefinition = { desc = "" },
		LYRDLSPFindWorkspaceDiagnostics = { desc = "" },
		LYRDLSPFindWorkspaceSymbols = { desc = "" },
		LYRDLSPGotoNextDiagnostic = { desc = "" },
		LYRDLSPGotoPrevDiagnostic = { desc = "" },
		LYRDLSPHoverInfo = { desc = "" },
		LYRDLSPRename = { desc = "" },
		LYRDLSPShowDocumentDiagnosticLocList = { desc = "Document diagnostics" },
		LYRDLSPShowWorkspaceDiagnosticLocList = { desc = "Workspace diagnostics" },
		LYRDLSPSignatureHelp = { desc = "" },
		LYRDPluginsClean = { default = ":PackerClean", desc = "Clean plugins" },
		LYRDPluginsInstall = { default = ":PackerInstall", desc = "Install plugins" },
		LYRDPluginsUpdate = { default = ":PackerSync", desc = "Update plugins" },
		LYRDSearchBufferLines = { desc = "Lines" },
		LYRDSearchBufferTags = { desc = "Tags" },
		LYRDSearchBuffers = { desc = "Search buffers" },
		LYRDSearchColorSchemes = { desc = "Color Schemes" },
		LYRDSearchCommandHistory = { desc = "Recent comands" },
		LYRDSearchCommands = { desc = "Commands" },
		LYRDSearchCurrentString = { desc = "Current string in files" },
		LYRDSearchFiles = { desc = "Find files" },
		LYRDSearchFiletypes = { desc = "Filetypes" },
		LYRDSearchGitFiles = { desc = "Git Files" },
		LYRDSearchHighlights = { desc = "Highlights" },
		LYRDSearchKeyMappings = { desc = "Key Maps" },
		LYRDSearchLiveGrep = { desc = "Live grep" },
		LYRDSearchQuickFixes = { desc = "Quick Fixes" },
		LYRDSearchRecentFiles = { desc = "Recent files" },
		LYRDSearchRegisters = { desc = "Registers" },
		LYRDSmartCoder = { desc = "Smart code generator" },
		LYRDTerminal = { default = ":terminal", desc = "Terminal" },
		LYRDTest = { desc = "Test everything" },
		LYRDTestCoverage = { desc = "Test Coverage" },
		LYRDTestFile = { desc = "Test current file" },
		LYRDTestFunc = { desc = "Test current function" },
		LYRDTestLast = { desc = "Repeat last test" },
		LYRDTestSuite = { desc = "Test suite" },
		LYRDTestSummary = { desc = "View test summary" },
		LYRDUnimplementedCommands = { default = commands.list_unimplemented, desc = "List unimplemented commands" },
		LYRDViewFileExplorer = { desc = "Explore files" },
		LYRDViewFileTree = { desc = "Toggle file tree" },
		LYRDViewHomePage = { desc = "Home page" },
		LYRDViewLocationList = { desc = "Location list" },
		LYRDViewQuickFixList = { default = ":cope", desc = "QuickFix" },
		LYRDViewRegisters = { desc = "Registers" },
		LYRDViewYankList = { desc = "Yank list" },
		LYRDWindowClose = { default = ":q", desc = "Close window" },
		LYRDWindowCloseAll = { default = ":qa", desc = "Close all" },
		LYRDWindowForceCloseAll = { default = ":qa!", desc = "Force Quit" },
	},
}

function L.settings(s)
	commands.register(s, L.cmd)
end

function L.keybindings(s)
	local cmd = L.cmd
	mappings.space_menu(s, {
		{ { "g" }, "Git Repository" },
		{ { "g", "f" }, "Gitflow" },
		{ { "a" }, "Application" },
		{ { "b" }, "Buffers" },
		{ { "c" }, "Code" },
		{ { "c", "g" }, "Code Generation" },
		{ { "t" }, "Test" },
		{ { "d" }, "Debug" },
		{ { "p" }, "Plugins" },
		{ { "q" }, "Quit" },
		{ { "s" }, "Search" },
		{ { "u" }, "User interface" },
		{ { "v" }, "View" },
	})
	mappings.space(s, {
		{ "n", { "<Tab>" }, cmd.LYRDBufferJumpToLast },
		{ "n", { "/" }, cmd.LYRDSearchBuffers },
		{ "n", { "," }, cmd.LYRDBufferPrev },
		{ "n", { "." }, cmd.LYRDBufferNext },
		-- View Menu
		{ "n", { "v", "." }, cmd.LYRDViewHomePage },
		{ "n", { "v", "t" }, cmd.LYRDViewFileTree },
		{ "n", { "v", "e" }, cmd.LYRDViewFileExplorer },
		{ "n", { "v", "l" }, cmd.LYRDViewLocationList },
		{ "n", { "v", "r" }, cmd.LYRDViewRegisters },
		{ "n", { "v", "y" }, cmd.LYRDViewYankList },
		{ "n", { "v", "q" }, cmd.LYRDViewQuickFixList },
		{ "n", { "v", "d" }, cmd.LYRDLSPShowDocumentDiagnosticLocList },
		{ "n", { "v", "D" }, cmd.LYRDLSPShowWorkspaceDiagnosticLocList },
		-- Buffer Menu
		{ "n", { "b", "e" }, cmd.LYRDBufferNew },
		{ "n", { "b", "n" }, cmd.LYRDBufferNext },
		{ "n", { "b", "p" }, cmd.LYRDBufferPrev },
		{ "n", { "b", "d" }, cmd.LYRDBufferClose },
		{ "n", { "b", "D" }, cmd.LYRDBufferForceClose },
		{ "n", { "b", "f" }, cmd.LYRDBufferFormat },
		{ "n", { "b", "x" }, cmd.LYRDBufferCloseAll },
		{ "n", { "b", "X" }, cmd.LYRDBufferForceCloseAll },
		{ "n", { "b", "h" }, cmd.LYRDBufferSplitH },
		{ "n", { "b", "v" }, cmd.LYRDBufferSplitV },
		{ "n", { "b", "w" }, cmd.LYRDBufferSetReadOnly },
		{ "n", { "b", "Y" }, cmd.LYRDBufferCopy },
		{ "n", { "b", "P" }, cmd.LYRDBufferPaste },
		{ "n", { "b", "/" }, cmd.LYRDSearchBuffers },
		{ "n", { "b", "s" }, cmd.LYRDBufferSave },
		{ "n", { "b", "S" }, cmd.LYRDBufferSaveAll },
		-- Application Menu
		{ "n", { "a", "i" }, cmd.LYRDPluginsInstall },
		{ "n", { "a", "u" }, cmd.LYRDPluginsUpdate },
		{ "n", { "a", "c" }, cmd.LYRDPluginsClean },
		{ "n", { "a", "t" }, cmd.LYRDTerminal },
		-- Quit Menu
		{ "n", { "q", "." }, cmd.LYRDWindowClose },
		{ "n", { "q", "q" }, cmd.LYRDWindowForceCloseAll },
		{ "n", { "q", "Q" }, cmd.LYRDWindowForceCloseAll },
		-- UI Menu
		{ "n", { "u", "w" }, cmd.LYRDBufferToggleWrap },
		-- Search Menu
		{ "n", { "s", "." }, cmd.LYRDSearchFiles },
		{ "n", { "s", "b" }, cmd.LYRDSearchBuffers },
		{ "n", { "s", "g" }, cmd.LYRDSearchGitFiles },
		{ "n", { "s", "h" }, cmd.LYRDSearchRecentFiles },
		{ "n", { "s", "l" }, cmd.LYRDSearchBufferLines },
		{ "n", { "s", "c" }, cmd.LYRDSearchCommandHistory },
		{ "n", { "s", "m" }, cmd.LYRDSearchKeyMappings },
		{ "n", { "s", "t" }, cmd.LYRDSearchBufferTags },
		{ "n", { "s", "/" }, cmd.LYRDSearchLiveGrep },
		{ "n", { "s", "f" }, cmd.LYRDSearchFiletypes },
		{ "n", { "s", "o" }, cmd.LYRDSearchColorSchemes },
		{ "n", { "s", "q" }, cmd.LYRDSearchQuickFixes },
		{ "n", { "s", "H" }, cmd.LYRDSearchHighlights },
		{ "n", { "s", "," }, cmd.LYRDSearchCommands },
		{ "n", { "s", "s" }, cmd.LYRDSearchCurrentString },
		{ "n", { "s", "p" }, cmd.LYRDSearchRegisters },
		-- Git Menu
		{ "n", { "g", "m" }, cmd.LYRDGitModifiedFiles },
		{ "n", { "g", "B" }, cmd.LYRDGitBranches },
		{ "n", { "g", "s" }, cmd.LYRDGitStatus },
		{ "n", { "g", "S" }, cmd.LYRDGitStageCurrentFile },
		{ "n", { "g", "U" }, cmd.LYRDGitUnstageCurrentFile },
		{ "n", { "g", "c" }, cmd.LYRDGitCommit },
		{ "n", { "g", "w" }, cmd.LYRDGitWrite },
		{ "n", { "g", "p" }, cmd.LYRDGitPush },
		{ "n", { "g", "P" }, cmd.LYRDGitPull },
		{ "n", { "g", "d" }, cmd.LYRDGitViewDiff },
		{ "n", { "g", "a" }, cmd.LYRDGitStageAll },
		{ "n", { "g", "b" }, cmd.LYRDGitViewBlame },
		{ "n", { "g", "r" }, cmd.LYRDGitRemove },
		{ "n", { "g", "V" }, cmd.LYRDGitViewCurrentFileLog },
		{ "n", { "g", "v" }, cmd.LYRDGitViewLog },
		{ "n", { "g", "o" }, cmd.LYRDGitBrowseOnWeb },
		{ "n", { "g", "f", "i" }, cmd.LYRDGitFlowInit },
		{ "n", { "g", "f", "f" }, cmd.LYRDGitFlowFeatureStart },
		{ "n", { "g", "f", "F" }, cmd.LYRDGitFlowFeatureFinish },
		{ "n", { "g", "f", "r" }, cmd.LYRDGitFlowReleaseStart },
		{ "n", { "g", "f", "R" }, cmd.LYRDGitFlowReleaseFinish },
		{ "n", { "g", "f", "h" }, cmd.LYRDGitFlowHotfixStart },
		{ "n", { "g", "f", "H" }, cmd.LYRDGitFlowHotfixFinish },
		{ "n", { "g", "f", "D" }, cmd.LYRDGitCheckoutDev },
		{ "n", { "g", "f", "M" }, cmd.LYRDGitCheckoutMain },
		-- Code Menu
		{ "n", { "c", "a" }, cmd.LYRDLSPFindCodeActions },
		{ "n", { "c", "A" }, cmd.LYRDLSPFindRangeCodeActions },
		{ "n", { "c", "b" }, cmd.LYRDCodeBuild },
		{ "n", { "c", "r" }, cmd.LYRDCodeRun },
		{ "n", { "c", "R" }, cmd.LYRDCodeRefactor },
		{ "n", { "c", "t" }, cmd.LYRDCodeAlternateFile },
		{ "n", { "c", "i" }, cmd.LYRDCodeFixImports },
		{ "n", { "c", "c" }, cmd.LYRDCodeGlobalCheck },
		{ "n", { "c", "I" }, cmd.LYRDCodeImplementInterface },
		{ "n", { "c", "s" }, cmd.LYRDCodeFillStructure },
		{ "n", { "c", "S" }, cmd.LYRDCodeInsertSnippet },
		{ "n", { "c", "g", "x" }, cmd.LYRDCodeGenerate },
		{ "n", { "c", "g", "g" }, cmd.LYRDCodeProduceGetter },
		{ "n", { "c", "g", "s" }, cmd.LYRDCodeProduceSetter },
		{ "n", { "c", "g", "m" }, cmd.LYRDCodeProduceMapping },
		-- Test menu
		{ "n", { "t", "t" }, cmd.LYRDTest },
		{ "n", { "t", "s" }, cmd.LYRDTestSuite },
		{ "n", { "t", "F" }, cmd.LYRDTestFile },
		{ "n", { "t", "f" }, cmd.LYRDTestFunc },
		{ "n", { "t", "l" }, cmd.LYRDTestLast },
		{ "n", { "t", "c" }, cmd.LYRDTestCoverage },
		{ "n", { "t", "v" }, cmd.LYRDTestSummary },

		-- Debug Menu
		{ "n", { "d", "c" }, cmd.LYRDDebugContinue },
		{ "n", { "d", "i" }, cmd.LYRDDebugStepInto },
		{ "n", { "d", "o" }, cmd.LYRDDebugStepOver },
		{ "n", { "d", "s" }, cmd.LYRDDebugStop },
		{ "n", { "d", "b" }, cmd.LYRDDebugBreakpoint },
		{ "n", { "d", "u" }, cmd.LYRDDebugToggleUI },
		{ "n", { "d", "r" }, cmd.LYRDDebugToggleRepl },
	})
end

return L
