local setup = require("LYRD.setup")
local commands = require("LYRD.layers.commands")
local cmd = require("LYRD.layers.lyrd-commands").cmd

local L = { name = "LYRD UI" }

function L.plugins(s)
	setup.plugin(s, {
		{ "nvim-lualine/lualine.nvim", requires = "kyazdani42/nvim-web-devicons" },
		"arkav/lualine-lsp-progress",
		"ellisonleao/gruvbox.nvim",
		{ "goolord/alpha-nvim", requires = "kyazdani42/nvim-web-devicons" },
		"rktjmp/lush.nvim",
		"kyazdani42/nvim-web-devicons",
		"stevearc/dressing.nvim",
	})
end

local function combine_ascii_art(base, new, from_line)
	for i = 1, #new, 1 do
		base[from_line + i] = base[from_line + i] .. new[i]
	end
	return base
end

local function header()
	local image = {
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£∂‚£¶‚°Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚°Ä‚¢Ä‚†Ä‚¢π‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ª‚£ø‚£ø‚£∑‚£Ñ‚†®‚£ø‚£ø‚£ø‚°å‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£æ‚£ø‚£Æ‚£ù‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚£π‚£ø‚°ø‚¢ø‚£ø‚£ø‚£¨‚£∂‚£∂‚°∂‚†¶‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¢‚£ô‚£ª‚¢ø‚£ø‚£ø‚£ø‚†é‚¢∏‚£ø‚†ï‚¢π‚£ø‚£ø‚°ø‚£õ‚£•‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†õ‚†ø‚°è‚£ø‚°è‚†ø‚¢Ñ‚£ú‚£°‚†û‚†õ‚°Ω‚£∏‚°ø‚£ü‚°ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚†æ‚†ø‚£ø‚†Å‚†Ä‚°Ñ‚†Ä‚†Ä‚†∞‚†æ‚†ø‚†õ‚†ì‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚††‚¢ê‚¢â‚¢∑‚£Ä‚†õ‚††‚†ê‚†ê‚††‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£¥‚£∂‚£ø‚£ß‚£æ‚†°‚†º‚†é‚¢é‚£ã‚°Ñ‚†Ü‚†Ä‚†±‚°Ñ‚¢â‚†É‚£¶‚°§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
		[[‚†Ä‚†Ä‚†ê‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚°Ä‚†Ä‚¢©‚†Ä‚¢Ä‚††‚†Ç‚¢Ä‚°å‚†Ä‚£ø‚°á‚†ü‚†Ä‚†Ä‚¢Ñ‚†Ä]],
		[[‚†Ä‚£¥‚£á‚†Ä‚°á‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£Ω‚£ü‚£≤‚°§‚†Ä‚£Ä‚£†‚£¥‚°æ‚†ü‚†Ä‚†Ä‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚°∞‚°Ä]],
		[[‚£º‚£ø‚†ã‚¢Ä‚£á‚¢∏‚°Ñ‚¢ª‚£ü‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚°ø‚†ü‚¢Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†Ä‚£†‚†Ä‚†∞]],
		[[‚¢∏‚£ø‚°£‚£ú‚£ø‚£º‚£ø‚£Ñ‚†ª‚°Ñ‚°Ä‚†â‚†õ‚†ø‚†ø‚†õ‚£â‚°§‚†ñ‚£°‚£∂‚†Å‚†Ä‚†Ä‚†Ä‚£æ‚£∂‚£ø‚†ê‚°Ä]],
		[[‚£æ‚°á‚†à‚†õ‚†õ‚†ø‚£ø‚£ø‚£¶‚†Å‚†ò‚¢∑‚£∂‚£∂‚°∂‚†ü‚¢ã‚£†‚£æ‚°ø‚†É‚†Ä‚†Ä‚†Ä‚†∞‚†õ‚†â‚†â‚†Ä‚†Ä  LYRD¬Æ Neovim by Diego Ortiz. 2023]],
	}
	local title = {
		[[  ‚ñà     ‚ñà‚ñë ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñì     ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñÑ ‚ñÑ‚ñà‚ñà‚ñà‚ñì ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà]],
		[[ ‚ñì‚ñà‚ñë ‚ñà ‚ñë‚ñà‚ñë ‚ñì‚ñà   ‚ñÄ ‚ñì‚ñà‚ñà‚ñí    ‚ñí‚ñà‚ñà‚ñÄ ‚ñÄ‚ñà ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí‚ñÄ‚ñà‚ñÄ ‚ñà‚ñà‚ñí ‚ñì‚ñà   ‚ñÄ]],
		[[ ‚ñí‚ñà‚ñë ‚ñà ‚ñë‚ñà  ‚ñí‚ñà‚ñà‚ñà   ‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñì‚ñà    ‚ñÑ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà    ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñà‚ñà‚ñà  ]],
		[[ ‚ñë‚ñà‚ñë ‚ñà ‚ñë‚ñà  ‚ñí‚ñì‚ñà  ‚ñÑ ‚ñí‚ñà‚ñà‚ñë   ‚ñí‚ñí‚ñì‚ñì‚ñÑ ‚ñÑ‚ñà‚ñà‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà    ‚ñí‚ñà‚ñà  ‚ñí‚ñì‚ñà  ‚ñÑ]],
		[[ ‚ñë‚ñë‚ñà‚ñà‚ñí‚ñà‚ñà‚ñì ‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñí ‚ñì‚ñà‚ñà‚ñà‚ñÄ ‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñí‚ñà‚ñà‚ñí   ‚ñë‚ñà‚ñà‚ñí‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà]],
		[[ ‚ñë ‚ñì‚ñë‚ñí ‚ñí  ‚ñë‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë ‚ñí‚ñë‚ñì  ‚ñë‚ñë ‚ñë‚ñí ‚ñí  ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñë   ‚ñë  ‚ñë‚ñë‚ñë‚ñë ‚ñí‚ñë ]],
		[[   ‚ñí ‚ñë ‚ñë  ‚ñë ‚ñë ‚ñë  ‚ñë‚ñë ‚ñë ‚ñí     ‚ñë  ‚ñí    ‚ñë ‚ñí ‚ñí‚ñë ‚ñë  ‚ñë      ‚ñë‚ñë ‚ñë ‚ñë  ]],
		[[   ‚ñë   ‚ñë      ‚ñë     ‚ñë ‚ñë   ‚ñë       ‚ñë ‚ñë ‚ñë ‚ñí  ‚ñë      ‚ñë       ‚ñë  ]],
	}
	return combine_ascii_art(image, title, 3)
end

local function startify_setup()
	local alpha = require("alpha")
	local startify = require("alpha.themes.startify")
	startify.section.header.val = header()
	startify.section.top_buttons.val = { startify.button("e", "ÔÖõ  New file", ":ene <BAR> startinsert <CR>") }
	startify.section.mru.val[2].val = "Files"
	startify.section.mru.val[4].val = function()
		return { startify.mru(10) }
	end
	startify.section.mru_cwd.val[2].val = "Current Directory"
	startify.section.mru_cwd.val[4].val = function()
		return { startify.mru(0, vim.fn.getcwd()) }
	end
	local config = startify.config
	alpha.setup(config)
end

local function devicons_setup()
	vim.g.webdevicons_enable = 1
	vim.g.webdevicons_enable_nerdtree = 1
	vim.g.webdevicons_enable_unite = 1
	vim.g.webdevicons_enable_vimfiler = 1
	vim.g.webdevicons_enable_airline_tabline = 1
	vim.g.webdevicons_enable_airline_statusline = 1
	vim.g.webdevicons_enable_ctrlp = 1
	vim.g.webdevicons_enable_flagship_statusline = 1
	vim.g.WebDevIconsUnicodeDecorateFileNodes = 1
	vim.g.WebDevIconsUnicodeGlyphDoubleWidth = 1
	vim.g.webdevicons_conceal_nerdtree_brackets = 1
	vim.g.WebDevIconsNerdTreeAfterGlyphPadding = "  "
	vim.g.WebDevIconsNerdTreeGitPluginForceVAlign = 1
	vim.g.webdevicons_enable_denite = 1
	vim.g.WebDevIconsUnicodeDecorateFolderNodes = 1
	vim.g.DevIconsEnableFoldersOpenClose = 1
	vim.g.DevIconsEnableFolderPatternMatching = 1
	vim.g.DevIconsEnableFolderExtensionPatternMatching = 1
	vim.g.WebDevIconsUnicodeDecorateFolderNodesExactMatches = 1
end

local function lsp_status_setup()
	local lualine_options = {
		options = { theme = "gruvbox" },
		sections = {
			lualine_c = { "filename" },
		},
	}
	table.insert(lualine_options.sections.lualine_c, {
		"lsp_progress",
		display_components = { "lsp_client_name", { "title", "percentage", "message" } },
		separators = {
			component = " ",
			progress = " | ",
			percentage = { pre = "", post = "%% " },
			title = { pre = "", post = ": " },
			lsp_client_name = { pre = "[", post = "]" },
			spinner = { pre = "", post = "" },
			message = { pre = "(", post = ")", commenced = "In Progress", completed = "Completed" },
		},
		timer = { progress_enddelay = 500, spinner = 1000, lsp_client_name_enddelay = 1000 },
		spinner_symbols = { "üåë ", "üåí ", "üåì ", "üåî ", "üåï ", "üåñ ", "üåó ", "üåò " },
	})
	require("lualine").setup(lualine_options)
end

function L.settings(s)
	commands.implement(s, "alpha", {
		{ cmd.LYRDBufferSave, [[:echo 'No saving']] },
	})
	-- Set theme
	require("gruvbox").setup({ contrast = "hard" })
	vim.cmd([[colorscheme gruvbox]])

	startify_setup()
	devicons_setup()
	lsp_status_setup()
	require("dressing").setup({
		input = {
			-- Set to false to disable the vim.ui.input implementation
			enabled = true,
			prompt_align = "center",
			relative = "editor",
		},
	})

	-- The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	local ui_sync_fromstart_group = vim.api.nvim_create_augroup("ui_sync_fromstart", {})
	vim.api.nvim_create_autocmd({ "BufEnter" }, {
		group = ui_sync_fromstart_group,
		pattern = { "*" },
		command = ":syntax sync maxlines=200",
	})

	-- Remember cursor position
	local ui_remember_cursor_position_group = vim.api.nvim_create_augroup("ui_remember_cursor_position", {})
	vim.api.nvim_create_autocmd({ "BufReadPost" }, {
		group = ui_remember_cursor_position_group,
		pattern = { "*" },
		command = [[if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif]],
	})

	-- Highlight the yanked text
	local ui_highlight_yank_group = vim.api.nvim_create_augroup("ui_highlight_yank_group", {})
	vim.api.nvim_create_autocmd({ "TextYankPost" }, {
		group = ui_highlight_yank_group,
		pattern = "*",
		callback = function()
			vim.highlight.on_yank({ higroup = "IncSearch", timeout = 100 })
		end,
	})
	commands.implement(s, "*", {
		{ cmd.LYRDViewHomePage, ":Alpha" },
	})
end

return L
